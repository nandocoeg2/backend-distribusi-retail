generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  username  String   @unique
  password  String
  firstName String?
  lastName  String?
  roleId    String
  role      Role     @relation(fields: [roleId], references: [id])
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  profile  Profile?

  @@map("users")
}

model Profile {
  id     String  @id @default(cuid())
  userId String  @unique
  avatar String?
  bio    String?
  phone  String?

  // Relations
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("profiles")
}



model Role {
  id          String @id @default(cuid())
  name        String @unique
  description String?
  users       User[]
  menus       RoleMenu[]

  @@map("roles")
}

model Menu {
  id        String   @id @default(cuid())
  name      String
  url       String
  icon      String?
  parentId  String?
  parent    Menu?    @relation("SubMenu", fields: [parentId], references: [id])
  children  Menu[]   @relation("SubMenu")
  roles     RoleMenu[]

  @@map("menus")
}

model RoleMenu {
  roleId String
  menuId String
  role   Role   @relation(fields: [roleId], references: [id])
  menu   Menu   @relation(fields: [menuId], references: [id])

  @@id([roleId, menuId])
  @@map("role_menus")
}